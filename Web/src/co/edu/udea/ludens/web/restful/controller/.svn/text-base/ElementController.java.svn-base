package co.edu.udea.ludens.web.restful.controller;



import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;


import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import co.edu.udea.ludens.domain.Element;
import co.edu.udea.ludens.domain.Population;
import co.edu.udea.ludens.services.ElementService;
import co.edu.udea.ludens.services.MessagesCentralService;
import co.edu.udea.ludens.test.FakeData;
import co.edu.udea.ludens.util.MessageEvent;


@Controller
@RequestMapping(value="/elements")
public class ElementController {
	
	
	Logger logger = Logger.getLogger(ElementController.class);
	
	@Autowired
	ElementService elementService;	
	
	@Autowired
	MessagesCentralService messagesCentralService;
	
    @RequestMapping(value="/all/{login}", method=RequestMethod.GET)
	public @ResponseBody  List<Element> getAllElements(@PathVariable String  login) {
			
		logger.info("getAllElements "+login);
		Set<Element> elements = elementService.getAllElements(login);
		List<Element> listaElements = new ArrayList<Element>(elements);
		
		return listaElements;
	}
    
    

    
    @RequestMapping(value="/factors/{login}",headers="Accept=*/*", method=RequestMethod.GET)
	public  @ResponseBody List<Element> getAllFactors(@PathVariable String  login) {
			
    	
		Set<Element> elements = elementService.getFactors(login);			
		List<Element> listaElements = new ArrayList<Element>(elements);
		return listaElements;


	}
    
    @RequestMapping(value="/materials/{login}",headers="Accept=*/*", method=RequestMethod.GET)
	public  @ResponseBody List<Element> getAllMaterials(@PathVariable String  login) {
		 	
    
		Set<Element> elements = elementService.getMaterials(login);			
		List<Element> listaElements = new ArrayList<Element>(elements);
		return listaElements;


	}
    
    
    @RequestMapping(value="/population/{login}",headers="Accept=*/*", method=RequestMethod.GET)
	public  @ResponseBody List<Population> getPopulation(@PathVariable String  login) {
		
    	List<Population> listPopulation = new ArrayList<Population>();
    	
    	Population actualPopulation=null;	
    	
	
		actualPopulation = elementService.getPopulation(login);		
		
		listPopulation.add(actualPopulation);
		
		return listPopulation;


	}
    
    @RequestMapping(value="/notifications/{login}",headers="Accept=*/*", method=RequestMethod.GET)
	public  @ResponseBody List<MessageEvent> getNotifications(@PathVariable String  login) {
		
    	List<MessageEvent> messagesEvent = new ArrayList<MessageEvent>();
		
        //elementService.
		
		messagesEvent =FakeData.players.get(login).getEvents();
	
		
		return messagesEvent;


	}
    
    
    
    
   
    @RequestMapping(value="/upLevel/{elementName}/{login}",headers="Accept=*/*", method=RequestMethod.GET)
	public  @ResponseBody MessageEvent upLevel(@PathVariable String  elementName, @PathVariable String login) {
			

    	try {
    		
		elementName=URLDecoder.decode(elementName, "ISO-8859-1");
			
		} catch (UnsupportedEncodingException e) {
		logger.error("Decoding error", e);
		}
		
    	
    	
    	MessageEvent event = elementService.upLevel(login,elementName);			
		
		return event;


	}


	
	
	
	
	
	

}
